#DEPENDENCIES
sample = glob_wildcards('../SRAfiles/fastq/{folder}/{sample}.sra_1.fastq')[0]

rule all:
        input: expand('../assemblies/{sample}_spades', sample = sample)

# TRIMMOMATIC
rule one:
	input:
		Reads1 = '../SRAfiles/fastq/{sample}/{sample}.sra_1.fastq',
		Reads2 = '../SRAfiles/fastq/{sample}/{sample}.sra_2.fastq'
	output:
		l_P = '../SRAfiles/fastq/{sample}/{sample}.trimmed_1P.fq',
		r_P = '../SRAfiles/fastq/{sample}/{sample}.trimmed_2P.fq',
		l_U = '../SRAfiles/fastq/{sample}/{sample}.trimmed_1U.fq',
		r_U = '../SRAfiles/fastq/{sample}/{sample}.trimmed_2U.fq'
	threads: 2
#	conda: '../../miniconda3/envs/snakemake'
	shell:
		'trimmomatic PE {input.Reads1} {input.Reads2} {output.l_P} {output.l_U} {output.r_P} {output.r_U} -threads {threads} '
		'ILLUMINACLIP:../../miniconda3/envs/snakemake/share/trimmomatic/adapters/TruSeq3-PE.fa:2:30:10:2:TRUE '
		'LEADING:20 TRAILING:20 SLIDINGWINDOW:5:20 MINLEN:95'

# SPADES
rule two:
	input:
		l = rules.one.output.l_P,
		r = rules.one.output.r_P
	output:
		assembly_folder = '../assemblies/{sample}_spades'
	threads: 2
#       conda: 'spades.yaml'
        shell:	
		'spades.py -1 {input.l} -2 {input.r} -o {output.assembly_folder} -t {threads} --memory 20'
